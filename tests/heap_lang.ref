1 subgoal
  
  Σ : gFunctors
  H : heapG Σ
  E : coPset
  ============================
  --------------------------------------∗
  WP let: "x" := ref #1 in "x" <- ! "x" + #1;; ! "x" @ E {{ v, ⌜v = #2⌝ }}
  
1 subgoal
  
  Σ : gFunctors
  H : heapG Σ
  E : coPset
  l : loc
  ============================
  _ : l ↦ #1
  --------------------------------------∗
  WP #l <- #1 + #1;; ! #l @ E {{ v, ⌜v = #2⌝ }}
  
1 subgoal
  
  Σ : gFunctors
  H : heapG Σ
  fun1, fun2, fun3 : expr
  ============================
  --------------------------------------∗
  WP let: "val1" := fun1 #() in
     let: "val2" := fun2 "val1" in
     let: "val3" := fun3 "val2" in if: "val1" = "val2" then "val" else "val3"
  {{ _, True }}
  
1 subgoal
  
  Σ : gFunctors
  H : heapG Σ
  fun1, fun2, fun3 : expr
  Φ : language.val heap_lang → iProp Σ
  ============================
  --------------------------------------∗
  WP let: "val1" := fun1 #() in
     let: "val2" := fun2 "val1" in
     let: "v" := fun3 "v" in if: "v" = "v" then "v" else "v" 
  {{ v, Φ v }}
  
1 subgoal
  
  Σ : gFunctors
  H : heapG Σ
  fun1, fun2, fun3 : expr
  Φ : language.val heap_lang → iProp Σ
  E : coPset
  ============================
  --------------------------------------∗
  WP let: "val1" := fun1 #() in
     let: "val2" := fun2 "val1" in
     let: "v" := fun3 "v" in if: "v" = "v" then "v" else "v" 
  @ E {{ v, Φ v }}
  
1 subgoal
  
  Σ : gFunctors
  H : heapG Σ
  fun1, fun2, fun3 : expr
  ============================
  {{{ True }}}
    let: "val1" := fun1 #() in
    let: "val2" := fun2 "val1" in
    let: "val3" := fun3 "val2" in if: "val1" = "val2" then "val" else "val3"
  {{{ (x y : val) (z : Z), RET (x, y, #z); True }}}
